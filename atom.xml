<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>caitiao的博客</title>
  
  <subtitle>就现在，Just do it</subtitle>
  <link href="http://caitiao.huitailang.pub/atom.xml" rel="self"/>
  
  <link href="http://caitiao.huitailang.pub/"/>
  <updated>2024-10-15T08:12:51.501Z</updated>
  <id>http://caitiao.huitailang.pub/</id>
  
  <author>
    <name>caitiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://caitiao.huitailang.pub/2024/10/15/docker-ming-ling-pi-liang-shan-chu-zhuang-tai-wei-exited-de-rong-qi/"/>
    <id>http://caitiao.huitailang.pub/2024/10/15/docker-ming-ling-pi-liang-shan-chu-zhuang-tai-wei-exited-de-rong-qi/</id>
    <published>2024-10-15T08:12:51.501Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>docker 启动的容器当中，经常有一些退出的容器，既然没有用了，就需要批量清理一下。</p><p>命令：</p><p>docker rm $(docker ps -q -f status&#x3D;exited)</p><p>解释： 利用 docker ps -f 选项可以找到 exited 的容器 -q 只显示容器 id 。</p><p>这样就可以批量删除了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker 启动的容器当中，经常有一些退出的容器，既然没有用了，就需要批量清理一下。&lt;/p&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;p&gt;docker rm $(docker ps -q -f status&amp;#x3D;exited)&lt;/p&gt;
&lt;p&gt;解释： 利用 docker ps -f </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用nmap扫描网段有多少主机在线</title>
    <link href="http://caitiao.huitailang.pub/2023/12/07/shi-yong-nmap-sao-miao-wang-duan-you-duo-shao-zhu-ji-zai-xian/"/>
    <id>http://caitiao.huitailang.pub/2023/12/07/shi-yong-nmap-sao-miao-wang-duan-you-duo-shao-zhu-ji-zai-xian/</id>
    <published>2023-12-07T11:09:55.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>光猫密码忘记了，想找到局域网内一台电脑的ip地址，就想着用工具去扫描出网络内活跃的主机。</p><ol><li>安装nmap<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nmap</span><br></pre></td></tr></table></figure></li><li>探测网络中活跃的主机<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 扫描此网段有多少ip在线，探测网段中的全部主机</span><br><span class="line">nmap -v -sP 192.168.1.0/24</span><br></pre></td></tr></table></figure></li><li>探测主机系统版本<br>nmap -O IP：探测指定IP的相关数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 192.168.1.3</span><br></pre></td></tr></table></figure></li><li>全面扫描<br>nmap -A IP：扫描指定IP的全部内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.3</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;光猫密码忘记了，想找到局域网内一台电脑的ip地址，就想着用工具去扫描出网络内活跃的主机。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装nmap&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="常用命令" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="nmap" scheme="http://caitiao.huitailang.pub/tags/nmap/"/>
    
    <category term="网段扫描" scheme="http://caitiao.huitailang.pub/tags/%E7%BD%91%E6%AE%B5%E6%89%AB%E6%8F%8F/"/>
    
  </entry>
  
  <entry>
    <title>iterm2配置123</title>
    <link href="http://caitiao.huitailang.pub/2023/12/07/iterm2-pei-zhi-zhi-nan/"/>
    <id>http://caitiao.huitailang.pub/2023/12/07/iterm2-pei-zhi-zhi-nan/</id>
    <published>2023-12-07T09:23:23.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>拿到mac电脑后，第一件事一般都会需要配置一个适合自己用的终端。我一般选择iterm2作为日常工作的终端，下面我就来记录下怎么配置我的iterm2。</p><ol><li>安装iterm2<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install iterm2</span><br></pre></td></tr></table></figure></li><li>oh-my-zsh<br>我电脑默认的sh是zsh，有了oh-my-zsh配置zsh就事半功倍。</li></ol><ul><li>检查当前系统支持的shell<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells</span><br></pre></td></tr></table></figure></li><li>将当前默认shell设置为zsh<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></li><li>安装oh-my-zsh<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>配置zsh主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">找到ZSH_THEME配置你想配置的主题，你可以在https://github.com/ohmyzsh/ohmyzsh/wiki/Themes 找到自己想要的主题</span><br><span class="line">我的配置：ZSH_THEME=&quot;agnoster&quot; </span><br></pre></td></tr></table></figure></li><li><p>字体配置<br>下载特定字体，以避免无法解码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># clone</span><br><span class="line">git clone https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"># install</span><br><span class="line">./fonts/install.sh</span><br><span class="line"># 清楚当前字体目录</span><br><span class="line">rm -rf fonts</span><br></pre></td></tr></table></figure><p>打开iterm2首选项，配置文件-&gt;文件-&gt;字体，选择“Meslo LG M for Powerline”字体，如果这一步不设置，可能会出现乱码</p></li><li><p>安装推荐的插件</p></li></ol><ul><li>语法高亮插件(syntax-highlighting)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting</span><br><span class="line">vim ~/.zshrc</span><br><span class="line">plugins=(zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure></li><li>自动补全插件(autocomplete)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions</span><br><span class="line">vim ~/.zshrc</span><br><span class="line">plugins=(zsh-syntax-highlighting zsh-autosuggestions)</span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li>iTerm2隐藏用户名和主机名<br>通常在Shell中默认的用户名和主机名加在一起会很长，使用的时候影响观感，我们可以通过配置去除掉<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"># 新增DEFAULT_USER=&quot;xxxxx&quot;配置</span><br><span class="line">DEFAULT_USER=&quot;xxxxx&quot; #xxxxx是当前用户名，可以通过whoami获得</span><br><span class="line"># 退出并保存后，使配置生效</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;拿到mac电脑后，第一件事一般都会需要配置一个适合自己用的终端。我一般选择iterm2作为日常工作的终端，下面我就来记录下怎么配置我的iterm2。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装iterm2&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    <category term="常用配置" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="iterm2" scheme="http://caitiao.huitailang.pub/tags/iterm2/"/>
    
  </entry>
  
  <entry>
    <title>运行一个单实例有状态应用</title>
    <link href="http://caitiao.huitailang.pub/2023/11/15/yun-xing-yi-ge-dan-shi-li-you-zhuang-tai-ying-yong/"/>
    <id>http://caitiao.huitailang.pub/2023/11/15/yun-xing-yi-ge-dan-shi-li-you-zhuang-tai-ying-yong/</id>
    <published>2023-11-15T15:27:10.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>通过创建一个 Kubernetes Deployment 并使用 <code>PersistentVolumeClaim</code> 将其连接到已有的 <code>PersistentVolume</code> 来运行一个有状态的应用</p><ol><li>创建一个MySQL数据存储卷的PersistentVolume，mysql-pv.yaml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-pv-volume</span><br><span class="line">  labels:</span><br><span class="line">    type: local</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: manual</span><br><span class="line">  capacity:</span><br><span class="line">    storage: 20Gi</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  hostPath:</span><br><span class="line">    path: &quot;/mnt/data&quot;</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-pv-claim</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: manual</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 20Gi</span><br></pre></td></tr></table></figure></li><li>执行PersistentVolume创建<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f mysql-pv.yaml</span><br></pre></td></tr></table></figure></li><li>查看新建的PersistentVolumeClaim<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pvc mysql-pv-claim</span><br></pre></td></tr></table></figure></li><li>创建一个MySQL Deployment，mysql-deployment.yaml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 3306</span><br><span class="line">  selector:</span><br><span class="line">    app: mysql</span><br><span class="line">  clusterIP: None</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql</span><br><span class="line">  strategy:</span><br><span class="line">    type: Recreate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: mysql:5.6</span><br><span class="line">        name: mysql</span><br><span class="line">        env:</span><br><span class="line">          # 在实际中使用 secret</span><br><span class="line">        - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">          value: password</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 3306</span><br><span class="line">          name: mysql</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: mysql-persistent-storage</span><br><span class="line">          mountPath: /var/lib/mysql</span><br><span class="line">      volumes:</span><br><span class="line">      - name: mysql-persistent-storage</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: mysql-pv-claim</span><br></pre></td></tr></table></figure></li><li>检查创建的应用是否成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe deployment mysql-deployment #显示Deployment信息</span><br><span class="line">kubectl get pods -l app=mysql-deployment #查看Pod列表</span><br><span class="line">kubectl decribe pod &lt;pod-name&gt; #查看Pod信息</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过创建一个 Kubernetes Deployment 并使用 &lt;code&gt;PersistentVolumeClaim&lt;/code&gt; 将其连接到已有的 &lt;code&gt;PersistentVolume&lt;/code&gt; 来运行一个有状态的应用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个M</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="deployment" scheme="http://caitiao.huitailang.pub/tags/deployment/"/>
    
    <category term="mysql" scheme="http://caitiao.huitailang.pub/tags/mysql/"/>
    
    <category term="PersistentVolume" scheme="http://caitiao.huitailang.pub/tags/PersistentVolume/"/>
    
    <category term="PersistentVolumeClaim" scheme="http://caitiao.huitailang.pub/tags/PersistentVolumeClaim/"/>
    
  </entry>
  
  <entry>
    <title>使用Deployment运行一个无状态应用</title>
    <link href="http://caitiao.huitailang.pub/2023/11/15/shi-yong-deployment-yun-xing-yi-ge-wu-zhuang-tai-ying-yong/"/>
    <id>http://caitiao.huitailang.pub/2023/11/15/shi-yong-deployment-yun-xing-yi-ge-wu-zhuang-tai-ying-yong/</id>
    <published>2023-11-15T14:50:36.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<ol><li>创建一个YAML配置文件 nginx-deployment.yaml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  replicas: 2 # 告知 Deployment 运行 2 个与该模板匹配的 Pod</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.14.2</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure></li><li>提交Deployment配置到k8s集群<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-deployment.yaml</span><br></pre></td></tr></table></figure></li><li>检查创建的应用是否成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe deployment nginx-deployment #显示Deployment信息</span><br><span class="line">kubectl get pods -l app=nginx #查看Pod列表</span><br><span class="line">kubectl decribe pod &lt;pod-name&gt; #查看Pod信息</span><br></pre></td></tr></table></figure></li><li>升级nginx版本1.14.2-&gt;1.16.1,创建nginx-deployment-update.yaml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  replicas: 2</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.16.1 # 将 nginx 版本从 1.14.2 更新为 1.16.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure></li><li>执行nginx更新<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-deployment-update.yaml</span><br></pre></td></tr></table></figure></li><li>通过增加副本数来扩容应用,创建nginx-deployment-scale.yaml<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  replicas: 4 # 将副本数从 2 更新为 4</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.16.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure></li><li>执行扩容动作<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-deployment-scale.yaml</span><br></pre></td></tr></table></figure></li><li>检查创建的应用是否扩容成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -l app=nginx #查看Pod列表，2-&gt;4</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;创建一个YAML配置文件 nginx-deployment.yaml&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="deployment" scheme="http://caitiao.huitailang.pub/tags/deployment/"/>
    
    <category term="nginx" scheme="http://caitiao.huitailang.pub/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>k8s部署应用相关概念</title>
    <link href="http://caitiao.huitailang.pub/2023/11/15/k8s-bu-shu-ying-yong-xiang-guan-gai-nian/"/>
    <id>http://caitiao.huitailang.pub/2023/11/15/k8s-bu-shu-ying-yong-xiang-guan-gai-nian/</id>
    <published>2023-11-15T10:05:12.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Workloads-工作负载"><a href="#Workloads-工作负载" class="headerlink" title="Workloads(工作负载):"></a>Workloads(工作负载):</h3><p>运行在k8s上的应用，可是单独一个组件(比如：job)，也可以是多个组件协同运行(比如：deployment，service，ingress等一起构成一个应用)</p><h3 id="Pod："><a href="#Pod：" class="headerlink" title="Pod："></a>Pod：</h3><p>k8s应用的最基本执行单元，在创建或部署k8s对象模式的最小和最简单单元，相当于集群中运行的进程。Pod是一组容器的集合，每个Pod可以由一个或多个容器组成，每个Pod由k8s分配一个集群内的IP和DNS。同一个Pod中的多个容器共享Pod的存储和网络，且总是被安排在相同的node上，且同时启动或停止。两种主要使用方法</p><ul><li>运行一个单一容器的Pod</li><li>运行多个需要共同运行的多个容器的Pod</li></ul><h3 id="init容器："><a href="#init容器：" class="headerlink" title="init容器："></a>init容器：</h3><p>init容器在其它容器运行之前启动运行并终止，init容器可以做一些初始化的工作。</p><h3 id="Workloads-Resources-工作负载资源-："><a href="#Workloads-Resources-工作负载资源-：" class="headerlink" title="Workloads Resources(工作负载资源)："></a>Workloads Resources(工作负载资源)：</h3><p>用于管理Pods，通过将相同Pods组合成一个Workload，简化一组Pods的管理，预置的Workloads Resources如下</p><ul><li>Deployment：Deployment适合管理集群上的无状态应用，在Deployment汇总所有pod完全等价，且在需要时随时可被替换。</li><li>ReplicaSet：维护一组在任何时候都处于运行状态的Pod副本的稳定集合，通常用来保证给定的数量，完全相同的Pod的可用性。</li><li>StatefulSet：运行一个或多个需要跟踪应用状态的Pods，管理基于相同容器规约的一组Pod，每个Pod维护一个有粘性永久不变的ID。例如，数据需要持久化的Pod就可以使用StatefulSet，将每个Pod和某个k8s持久化存储卷对应起来(即共享存储)，StatefulSet的各个Pod可以通过共享k8s持久化存储卷交换数据提高整体服务可靠性，相当于共享Nas的Web服务器。</li><li>Job：创建一个或多个Pod，并持续重复Pod的执行，直到指定数量的Pod成功终止。定义Job可以确保一组Pod围绕一个任务来反复执行直到最终目标达成后Job终止。</li><li>CronJob：创建基于时隔重复调度的Job，用于执行排期操作，如备份，生成报告等。</li><li>DaemonSet：适合为Cluster Node提供服务的Pod，比如管理集群网络或插件，当在k8s集群中新增Node时，由Control Plane根据DaemonSet中的定义安排在新的Node上运行Pod</li><li>ReplicationController：确保一个Pod或一组同类的Pod总是可用</li></ul><h3 id="Service："><a href="#Service：" class="headerlink" title="Service："></a>Service：</h3><p>将运行在一个或一组 Pod 上的网络应用程序公开为网络服务的方法。用来把应用运行的Pods作为网络服务暴露出来，Pods没有固定IP，Service有固定IP</p><h3 id="Namespace："><a href="#Namespace：" class="headerlink" title="Namespace："></a>Namespace：</h3><p>k8s在cluster中创建的virtual cluster</p><h3 id="DNS："><a href="#DNS：" class="headerlink" title="DNS："></a>DNS：</h3><p>特指k8s内部的DNS，k8s会自动为每个Pod和Service创建DNS，暴露出Pod和Service的访问出口</p><h3 id="Ingress："><a href="#Ingress：" class="headerlink" title="Ingress："></a>Ingress：</h3><p>对集群中服务的外部访问进行管理的API对象，典型的访问方式是HTTP。可以提供负载均衡，SSL终结和基于名称的虚拟托管。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Workloads-工作负载&quot;&gt;&lt;a href=&quot;#Workloads-工作负载&quot; class=&quot;headerlink&quot; title=&quot;Workloads(工作负载):&quot;&gt;&lt;/a&gt;Workloads(工作负载):&lt;/h3&gt;&lt;p&gt;运行在k8s上的应用，可是单独一个组</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>kubectl常用命令</title>
    <link href="http://caitiao.huitailang.pub/2023/11/06/kubectl-chang-yong-ming-ling/"/>
    <id>http://caitiao.huitailang.pub/2023/11/06/kubectl-chang-yong-ming-ling/</id>
    <published>2023-11-06T17:03:47.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>kubectl常用命令</p><h3 id="查看node"><a href="#查看node" class="headerlink" title="查看node"></a>查看node</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><h3 id="查看pod"><a href="#查看pod" class="headerlink" title="查看pod"></a>查看pod</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods --all-namespaces</span><br></pre></td></tr></table></figure><h3 id="查看指定namespace下的pod"><a href="#查看指定namespace下的pod" class="headerlink" title="查看指定namespace下的pod"></a>查看指定namespace下的pod</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n namespace</span><br></pre></td></tr></table></figure><h3 id="执行yaml文件"><a href="#执行yaml文件" class="headerlink" title="执行yaml文件"></a>执行yaml文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f xxxx.yaml</span><br></pre></td></tr></table></figure><h3 id="查看Service"><a href="#查看Service" class="headerlink" title="查看Service"></a>查看Service</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc --all-namespaces</span><br></pre></td></tr></table></figure><h3 id="查看描述信息"><a href="#查看描述信息" class="headerlink" title="查看描述信息"></a>查看描述信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pod &lt;pod-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure><h3 id="查看pod所在节点"><a href="#查看pod所在节点" class="headerlink" title="查看pod所在节点"></a>查看pod所在节点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide --all-namespaces</span><br></pre></td></tr></table></figure><h3 id="查看apiVersion对应版本"><a href="#查看apiVersion对应版本" class="headerlink" title="查看apiVersion对应版本"></a>查看apiVersion对应版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl explain pod</span><br></pre></td></tr></table></figure><h3 id="进入pod"><a href="#进入pod" class="headerlink" title="进入pod"></a>进入pod</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it &lt;pod-name&gt; --grace-period=0 --force</span><br></pre></td></tr></table></figure><h3 id="使用yaml文件删除pod"><a href="#使用yaml文件删除pod" class="headerlink" title="使用yaml文件删除pod"></a>使用yaml文件删除pod</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete -f xxxx.yaml</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;kubectl常用命令&lt;/p&gt;
&lt;h3 id=&quot;查看node&quot;&gt;&lt;a href=&quot;#查看node&quot; class=&quot;headerlink&quot; title=&quot;查看node&quot;&gt;&lt;/a&gt;查看node&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;t</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="kubectl" scheme="http://caitiao.huitailang.pub/tags/kubectl/"/>
    
  </entry>
  
  <entry>
    <title>k8s如何停止服务</title>
    <link href="http://caitiao.huitailang.pub/2023/11/06/k8s-ru-he-ting-zhi-fu-wu/"/>
    <id>http://caitiao.huitailang.pub/2023/11/06/k8s-ru-he-ting-zhi-fu-wu/</id>
    <published>2023-11-06T16:00:06.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>在k8s中，我们需要停止服务，主要有如下两种方式：</p><ol><li>通过命令行工具：使用kubectl命令可以管理k8s集群中的资源，停止服务命令如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete service [service_name]</span><br></pre></td></tr></table></figure></li><li>通过api：可以通过k8s api来管理集群中的资源，使用http delete来发送停止服务的请求</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在k8s中，我们需要停止服务，主要有如下两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过命令行工具：使用kubectl命令可以管理k8s集群中的资源，停止服务命令如下：&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="service" scheme="http://caitiao.huitailang.pub/tags/service/"/>
    
  </entry>
  
  <entry>
    <title>应用现代化</title>
    <link href="http://caitiao.huitailang.pub/2023/10/31/ying-yong-xian-dai-hua/"/>
    <id>http://caitiao.huitailang.pub/2023/10/31/ying-yong-xian-dai-hua/</id>
    <published>2023-10-31T15:13:06.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>什么是应用现代化？对老旧软件进行更新使之采用更新的计算方式，包括更新的语言，框架和基础设施平台，就相当于对旧房进行翻新。通过新技术来更新改造及现代化应用的同时，来延长应用的生命周期。</p><h4 id="应用现代化的意义"><a href="#应用现代化的意义" class="headerlink" title="应用现代化的意义"></a>应用现代化的意义</h4><ul><li>延长原有应用程序的生命周期</li><li>利用计算技术领域的创新成果</li><li>发挥原有应用的更大价值</li></ul><h4 id="应用现代化的优点"><a href="#应用现代化的优点" class="headerlink" title="应用现代化的优点"></a>应用现代化的优点</h4><ul><li>提高新功能的交付速度</li><li>通过API方式公开现有应用的功能，供其他服务使用</li><li>将应用的平台从本地转变为云，以达到扩大应用规模及提升应用性能</li></ul><h4 id="应用现代化面临的挑战"><a href="#应用现代化面临的挑战" class="headerlink" title="应用现代化面临的挑战"></a>应用现代化面临的挑战</h4><ul><li>成本：应用现代化绝对不是为了降低成本</li><li>复杂性：应用现代化后会带来一定的复杂度</li></ul><h4 id="应用现代化模式"><a href="#应用现代化模式" class="headerlink" title="应用现代化模式"></a>应用现代化模式</h4><ul><li>从单体式到服务化：利用松散耦合的微服务取代单体式服务，由微服务来负责计算工作</li><li>云迁移：通过容器化对应用进行更新改造，让应用更好的适配不同基础设施的部署发布</li><li>通过API公开功能：通过API安全地公开功能及数据，让现代化应用能够复用传统服务的功能</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;什么是应用现代化？对老旧软件进行更新使之采用更新的计算方式，包括更新的语言，框架和基础设施平台，就相当于对旧房进行翻新。通过新技术来更新改造及现代化应用的同时，来延长应用的生命周期。&lt;/p&gt;
&lt;h4 id=&quot;应用现代化的意义&quot;&gt;&lt;a href=&quot;#应用现代化的意义&quot; cla</summary>
      
    
    
    
    <category term="应用研发" scheme="http://caitiao.huitailang.pub/categories/%E5%BA%94%E7%94%A8%E7%A0%94%E5%8F%91/"/>
    
    
    <category term="现代化" scheme="http://caitiao.huitailang.pub/tags/%E7%8E%B0%E4%BB%A3%E5%8C%96/"/>
    
    <category term="微服务" scheme="http://caitiao.huitailang.pub/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>现代应用程序</title>
    <link href="http://caitiao.huitailang.pub/2023/10/31/xian-dai-ying-yong-cheng-xu/"/>
    <id>http://caitiao.huitailang.pub/2023/10/31/xian-dai-ying-yong-cheng-xu/</id>
    <published>2023-10-31T14:18:53.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>现代应用程序(Modern Application)是通过采用云原生体系结构来快速响应事件，满足客户多变需求的一种方法，它的构建采用了容器化，松散耦合的微服务架构模式，Serverless运行模式和DevOps自动化软件交付流程。</p><h4 id="什么不是现代化应用"><a href="#什么不是现代化应用" class="headerlink" title="什么不是现代化应用"></a>什么不是现代化应用</h4><p>单机应用(不联网，不可扩展的单例)，数据存在内存中，不使用源代码控制，不用工具来自动构建和发布新版本，不具备扩展性和适配性。<br>不是说用了容器技术或跑在k8s上就是现代化应用，在裸机或虚拟机上运行的应用不一定表示它不是现代化的，微服务可以跑在裸机上或虚拟机上运行。<br>一个应用应该从不同的角度(比如构建，运行，管理，连接和保护)具有某些特质，才能称之为现代化的应用。</p><h4 id="现代化应用的特征-微服务，弹性，多云"><a href="#现代化应用的特征-微服务，弹性，多云" class="headerlink" title="现代化应用的特征(微服务，弹性，多云)"></a>现代化应用的特征(微服务，弹性，多云)</h4><ul><li>微服务<br>作为现代化应用的组成部分，服务倾向于遵循UNIX原则，做一件事情，并且做得很好。服务是独立的，意味着服务是可以独立运行，根据访问策略被消费者调用。</li><li>弹性<br>现代软件理论认为任何系统都一定会发生故障，需要面向故障或失败去设计我们的应用及服务。应用应具备弹性设计原则，以平均无故障时间(MTBF)和平均恢复时间(MTTR)来度量应用的弹性能力。</li><li>多云<br>随着云计算的普及，面对多云厂商供给，我们在应用设计的时候不可避免的需要考虑多云部署场景。我们通常通过抽象将应用和底层运行环境的硬件和平台解耦来提高了可部署性。</li><li>灵活部署<br>从裸机到虚拟机，从容器到无服务器的每项技术改进都显示出软件可部署性的提高，每次转换都是软件对运行代码的环境依赖性降低。</li><li>虚拟机，容器和无服务器<br>围绕应用构建，运行和管理的工具和流程自动化和协调来实现现代化应用部署裸机，容器或虚拟机中。</li></ul><h4 id="从部署方式看应用程序"><a href="#从部署方式看应用程序" class="headerlink" title="从部署方式看应用程序"></a>从部署方式看应用程序</h4><ul><li>传统应用程序<br>直接部署在云服务器(如阿里云的ECS)上,我们一定会经历部署环境的安装及配置(java+nginx,php+apache等)，本地编译代码，上传代码到指定的云服务器。</li><li>环境无关的现代应用<br>通过CI&#x2F;CD工具来将应用构建打包成Docker镜像，通过k8s或阿里云的ack来部署Docker镜像来实现现代化应用的部署。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现代应用程序(Modern Application)是通过采用云原生体系结构来快速响应事件，满足客户多变需求的一种方法，它的构建采用了容器化，松散耦合的微服务架构模式，Serverless运行模式和DevOps自动化软件交付流程。&lt;/p&gt;
&lt;h4 id=&quot;什么不是现代化应用</summary>
      
    
    
    
    <category term="应用研发" scheme="http://caitiao.huitailang.pub/categories/%E5%BA%94%E7%94%A8%E7%A0%94%E5%8F%91/"/>
    
    
    <category term="微服务" scheme="http://caitiao.huitailang.pub/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="多云" scheme="http://caitiao.huitailang.pub/tags/%E5%A4%9A%E4%BA%91/"/>
    
    <category term="弹性" scheme="http://caitiao.huitailang.pub/tags/%E5%BC%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Deployment资源对象yaml详解</title>
    <link href="http://caitiao.huitailang.pub/2023/10/25/deployment-zi-yuan-dui-xiang-yaml-xiang-jie/"/>
    <id>http://caitiao.huitailang.pub/2023/10/25/deployment-zi-yuan-dui-xiang-yaml-xiang-jie/</id>
    <published>2023-10-25T10:19:51.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>Deployment资源对象yaml详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata: ----------------------------------------#元数据</span><br><span class="line">  annotations: -------------------------------------#注释信息</span><br><span class="line">    deployment.kubernetes.io/revision: &#x27;1&#x27;</span><br><span class="line">    k8s.kuboard.cn/ingress: &#x27;false&#x27;</span><br><span class="line">    k8s.kuboard.cn/service: NodePort</span><br><span class="line">    k8s.kuboard.cn/workload: nextcloud</span><br><span class="line">  labels:-------------------------------------------#标签信息</span><br><span class="line">    k8s.kuboard.cn/layer: &#x27;&#x27;            </span><br><span class="line">    k8s.kuboard.cn/name: nextcloud</span><br><span class="line">  name: nextcloud-----------------------------------#名称</span><br><span class="line">  namespace: nextcloud------------------------------#命名空间 </span><br><span class="line">spec:-----------------------------------------------#定义容器模板，该模板可以包含多个容器 </span><br><span class="line">  replicas: 3---------------------------------------#副本数量</span><br><span class="line">  selector:-----------------------------------------#标签选择器</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s.kuboard.cn/layer: &#x27;&#x27;</span><br><span class="line">      k8s.kuboard.cn/name: nextcloud</span><br><span class="line">  strategy:-----------------------------------------#滚动升级策略</span><br><span class="line">    type: RollingUpdate-----------------------------#类型</span><br><span class="line">    rollingUpdate:----------------------------------#由于replicas为3,则整个升级,pod个数在2-4个之间    </span><br><span class="line">      maxSurge: 25%---------------------------------#滚动升级时会先启动25%pod  </span><br><span class="line">      maxUnavailable: 25%---------------------------#滚动升级时允许的最大Unavailable的pod个数</span><br><span class="line">  template:                     #镜像模板                   </span><br><span class="line">    metadata: ------------------------------------#元数据</span><br><span class="line">      labels:---------------------------------------#标签</span><br><span class="line">        k8s.kuboard.cn/layer: &#x27;&#x27;</span><br><span class="line">        k8s.kuboard.cn/name: nextcloud</span><br><span class="line">    spec: ------------------------------------------#定义容器模板，该模板可以包含多个容器</span><br><span class="line">      containers: ----------------------------------#容器信息</span><br><span class="line">    - name: nextcloud --------------------------#容器名称</span><br><span class="line">          image: &#x27;172.16.20.100/library/nextcloud:yan&#x27; #镜像名称</span><br><span class="line">          imagePullPolicy: Always ------------------#镜像下载策略 </span><br><span class="line">          ports:</span><br><span class="line">            - name: http</span><br><span class="line">              containerPort: 80</span><br><span class="line">              protocol: TCP</span><br><span class="line">          env</span><br><span class="line">          resources: -------------------------------#CPU内存限制</span><br><span class="line">        limits: --------------------------------#限制cpu内存                      </span><br><span class="line">              cpu: 200m</span><br><span class="line">              memory: 200m</span><br><span class="line">            requests: ------------------------------#请求cpu内存</span><br><span class="line">              cpu: 100m</span><br><span class="line">              memory: 100m</span><br><span class="line">          securityContext: -------------------------#安全设定</span><br><span class="line">            privileged: true -----------------------#开启享有特权</span><br><span class="line">          volumeMounts: ----------------------------#挂载volumes中定义的磁盘</span><br><span class="line">        - name: html ---------------------------#挂载容器1</span><br><span class="line">              mountPath: /var/www/html </span><br><span class="line">            - name: session ------------------------#挂载容器1</span><br><span class="line">              mountPath: /var/lib/php/session       </span><br><span class="line">      volumes:  ------------------------------------#在该pod上定义共享存储卷列表</span><br><span class="line">        - name: html -------------------------------#共享存储卷名称 （volumes类型有很多种）</span><br><span class="line">          persistentVolumeClaim: -------------------#volumes类型为pvc</span><br><span class="line">            claimName: html  -----------------------#关联pvc名称</span><br><span class="line">        - name: session</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: session        </span><br><span class="line">      restartPolicy: Always ------------------------#Pod的重启策略 </span><br><span class="line">                              #Always表示一旦不管以何种方式终止运行，kubelet都将重启，</span><br><span class="line">                              #OnFailure表示只有Pod以非0退出码退出才重启，</span><br><span class="line">                              #Nerver表示不再重启该Pod</span><br><span class="line">      schedulerName: default-scheduler -------------#指定pod调度到节点</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Deployment资源对象yaml详解&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="deployment" scheme="http://caitiao.huitailang.pub/tags/deployment/"/>
    
    <category term="yaml" scheme="http://caitiao.huitailang.pub/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>Service资源对象yaml详解</title>
    <link href="http://caitiao.huitailang.pub/2023/10/25/service-zi-yuan-dui-xiang-yaml-xiang-jie/"/>
    <id>http://caitiao.huitailang.pub/2023/10/25/service-zi-yuan-dui-xiang-yaml-xiang-jie/</id>
    <published>2023-10-25T10:18:14.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>Service资源对象yaml详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:  ---------------------------------#元数据</span><br><span class="line">  annotations: -----------------------------#注释信息</span><br><span class="line">    k8s.kuboard.cn/workload: nextcloud</span><br><span class="line">  labels: ----------------------------------#标签信息</span><br><span class="line">    k8s.kuboard.cn/layer: &#x27;&#x27;</span><br><span class="line">    k8s.kuboard.cn/name: nextcloud</span><br><span class="line">  name: nextcloud --------------------------#名称</span><br><span class="line">  namespace: nextcloud ---------------------#命名空间</span><br><span class="line">spec: --------------------------------------#定义Service模板</span><br><span class="line">  clusterIP: 10.0.181.206 ------------------#指定svcip地址 不指定则随机 </span><br><span class="line">  </span><br><span class="line">=================================================================================================</span><br><span class="line">  #NodePort类型：集群外网络</span><br><span class="line">  type: NodePort ---------------------------#类型为NodePort  </span><br><span class="line">  ports:</span><br><span class="line">    - name: mnwwwp</span><br><span class="line">      nodePort: 30001 ----------------------#当type = NodePort时，指定映射到物理机的端口号</span><br><span class="line">      port: 80 -----------------------------#服务监听的端口号</span><br><span class="line">      protocol: TCP ------------------------#端口协议，支持TCP和UDP，默认TCP</span><br><span class="line">      targetPort: 80 -----------------------#需要转发到后端Pod的端口号</span><br><span class="line">  </span><br><span class="line">==================================================================================================</span><br><span class="line">  #ClusterIP类型：集群内网络</span><br><span class="line">  type: ClusterIP --------------------------#</span><br><span class="line">  ports:</span><br><span class="line">    - name: mnwwwp</span><br><span class="line">      port: 80</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 80</span><br><span class="line">    - name: j5smwx</span><br><span class="line">      port: 22</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 22</span><br><span class="line">      </span><br><span class="line">  selector:  -------------------------------#label selector配置，将选择具有label标签的Pod作为管理 </span><br><span class="line">    k8s.kuboard.cn/layer: &#x27;&#x27;</span><br><span class="line">    k8s.kuboard.cn/name: nextcloud</span><br><span class="line">  sessionAffinity: None --------------------#是否支持session</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Service资源对象yaml详解&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="yaml" scheme="http://caitiao.huitailang.pub/tags/yaml/"/>
    
    <category term="service" scheme="http://caitiao.huitailang.pub/tags/service/"/>
    
  </entry>
  
  <entry>
    <title>Pod资源对象yaml详解</title>
    <link href="http://caitiao.huitailang.pub/2023/10/25/pod-zi-yuan-dui-xiang-yaml-xiang-jie/"/>
    <id>http://caitiao.huitailang.pub/2023/10/25/pod-zi-yuan-dui-xiang-yaml-xiang-jie/</id>
    <published>2023-10-25T10:14:47.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>Pod资源对象yaml详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1     #必选，版本号，例如v1</span><br><span class="line">kind: Pod       #必选，指定创建资源的角色/类型  </span><br><span class="line">metadata:        #必选，资源的元数据/属性 </span><br><span class="line">  name: string       #必选，资源的名字，在同一个namespace中必须唯一  </span><br><span class="line">  namespace: string     #必选，Pod所属的命名空间</span><br><span class="line">  labels:      #自定义标签,使这个标签在service网络中备案，以便被获知</span><br><span class="line">    - name: string   #自定义标签名字</span><br><span class="line">  annotations:       #设置自定义注解列表  </span><br><span class="line">    - name: string   #设置自定义注解名字  </span><br><span class="line">spec:         #必选，设置该资源的详细定义</span><br><span class="line">  containers:    #必选，Pod中容器列表</span><br><span class="line">  - name: string     #必选，容器名称</span><br><span class="line">    image: string    #必选，容器的镜像名称</span><br><span class="line">    imagePullPolicy: [Always | Never | IfNotPresent] #获取镜像的策略 Alawys表示下载镜像 IfnotPresent表示优先使用本地镜像，否则下载镜像，Nerver表示仅使用本地镜像</span><br><span class="line">    command: [string]    #容器的启动命令列表，如不指定，使用打包时使用的启动命令</span><br><span class="line">    args: [string]     #容器的启动命令参数列表</span><br><span class="line">    workingDir: string   #容器的工作目录</span><br><span class="line">    volumeMounts:        #挂载到容器内部的存储卷配置</span><br><span class="line">    - name: string     #引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span><br><span class="line">      mountPath: string    #存储卷在容器内mount的绝对路径，应少于512字符</span><br><span class="line">      readOnly: boolean    #是否为只读模式</span><br><span class="line">    ports:       #需要暴露的端口库号列表</span><br><span class="line">    - name: string     #端口号名称</span><br><span class="line">      containerPort: int  #容器需要监听的端口号</span><br><span class="line">      hostPort: int    #容器所在主机需要监听的端口号，默认与Container相同</span><br><span class="line">      protocol: string     #端口协议，支持TCP和UDP，默认TCP</span><br><span class="line">    env:       #容器运行前需设置的环境变量列表</span><br><span class="line">    - name: string     #环境变量名称</span><br><span class="line">      value: string    #环境变量的值</span><br><span class="line">    resources:       #资源限制和请求的设置</span><br><span class="line">      limits:      #资源限制的设置</span><br><span class="line">        cpu: string    #Cpu的限制，单位为core数，将用于docker run --cpu-shares参数</span><br><span class="line">        memory: string   #内存限制，单位可以为Mib/Gib，将用于docker run --memory参数</span><br><span class="line">      requests:         #资源请求的设置</span><br><span class="line">        cpu: string    #Cpu请求，容器启动的初始可用数量</span><br><span class="line">        memory: string   #内存清楚，容器启动的初始可用数量</span><br><span class="line">    livenessProbe:     #对Pod内个容器健康检查的设置，当探测无响应几次后将自动重启该容器，检查方法有exec、httpGet和tcpSocket，对一个容器只需设置其中一种方法即可</span><br><span class="line">      exec:      #对Pod容器内检查方式设置为exec方式</span><br><span class="line">        command: [string]  #exec方式需要制定的命令或脚本</span><br><span class="line">      httpGet:       #对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port</span><br><span class="line">        path: string</span><br><span class="line">        port: number</span><br><span class="line">        host: string</span><br><span class="line">        scheme: string</span><br><span class="line">        HttpHeaders:</span><br><span class="line">        - name: string</span><br><span class="line">          value: string</span><br><span class="line">      tcpSocket:     #对Pod内个容器健康检查方式设置为tcpSocket方式</span><br><span class="line">         port: number</span><br><span class="line">       initialDelaySeconds: 0  #容器启动完成后首次探测的时间，单位为秒</span><br><span class="line">       timeoutSeconds: 0   #对容器健康检查探测等待响应的超时时间，单位秒，默认1秒</span><br><span class="line">       periodSeconds: 0    #对容器监控检查的定期探测时间设置，单位秒，默认10秒一次</span><br><span class="line">       successThreshold: 0</span><br><span class="line">       failureThreshold: 0</span><br><span class="line">       securityContext:</span><br><span class="line">         privileged:false</span><br><span class="line">    restartPolicy: [Always | Never | OnFailure]#Pod的重启策略，Always表示一旦不管以何种方式终止运行，kubelet都将重启，OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod</span><br><span class="line">    nodeSelector: obeject  #设置NodeSelector表示将该Pod调度到包含这个label的node上，以key：value的格式指定</span><br><span class="line">    imagePullSecrets:    #Pull镜像时使用的secret名称，以key：secretkey格式指定</span><br><span class="line">    - name: string</span><br><span class="line">    hostNetwork:false      #是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络</span><br><span class="line">    volumes:       #在该pod上定义共享存储卷列表</span><br><span class="line">    - name: string     #共享存储卷名称 （volumes类型有很多种）</span><br><span class="line">      emptyDir: &#123;&#125;     #类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值</span><br><span class="line">      hostPath: string     #类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录</span><br><span class="line">        path: string     #Pod所在宿主机的目录，将被用于同期中mount的目录</span><br><span class="line">      secret:      #类型为secret的存储卷，挂载集群与定义的secre对象到容器内部</span><br><span class="line">        scretname: string  </span><br><span class="line">        items:     </span><br><span class="line">        - key: string</span><br><span class="line">          path: string</span><br><span class="line">      configMap:     #类型为configMap的存储卷，挂载预定义的configMap对象到容器内部</span><br><span class="line">        name: string</span><br><span class="line">        items:</span><br><span class="line">        - key: string</span><br><span class="line">          path: string</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pod资源对象yaml详解&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line</summary>
      
    
    
    
    <category term="技术" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/categories/%E6%8A%80%E6%9C%AF/k8s/"/>
    
    
    <category term="k8s" scheme="http://caitiao.huitailang.pub/tags/k8s/"/>
    
    <category term="yaml" scheme="http://caitiao.huitailang.pub/tags/yaml/"/>
    
    <category term="pod" scheme="http://caitiao.huitailang.pub/tags/pod/"/>
    
  </entry>
  
  <entry>
    <title>根据进程名过滤进程信息</title>
    <link href="http://caitiao.huitailang.pub/2023/10/25/gen-ju-jin-cheng-ming-guo-lu-jin-cheng-xin-xi/"/>
    <id>http://caitiao.huitailang.pub/2023/10/25/gen-ju-jin-cheng-ming-guo-lu-jin-cheng-xin-xi/</id>
    <published>2023-10-25T09:57:53.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>根据进程名过滤进程信息并显示出该进程名包含的所有线程，适用于MacOS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"># Function: 根据输入的程序的名字过滤出所对应的PID，并显示出详细信息，如果有几个PID，则全部显示</span><br><span class="line">read -p &quot;请输入要查询的进程名：&quot; NAME</span><br><span class="line">N=`ps aux | grep $NAME | grep -v grep | wc -l` ##统计进程总数</span><br><span class="line">if [ $N -le 0 ];then</span><br><span class="line">  echo &quot;该进程名没有运行！&quot;</span><br><span class="line">fi</span><br><span class="line">i=1</span><br><span class="line">while [ $N -gt 0 ]</span><br><span class="line">do</span><br><span class="line">  echo &quot;进程PID: `ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $2&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程命令：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $11&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程所属用户: `ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $1&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;CPU占用率：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $3&#125;&#x27;`%&quot;</span><br><span class="line">  echo &quot;内存占用率：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $4&#125;&#x27;`%&quot;</span><br><span class="line">  echo &quot;进程开始运行的时刻：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $9&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程运行的时间：` ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $11&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程状态：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $8&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程虚拟内存：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $5&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;进程共享内存：`ps aux | grep $NAME | grep -v grep | awk &#x27;NR==&#x27;$i&#x27;&#123;print $0&#125;&#x27;| awk &#x27;&#123;print $6&#125;&#x27;`&quot;</span><br><span class="line">  echo &quot;***************************************************************&quot;</span><br><span class="line">  let N-- i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;根据进程名过滤进程信息并显示出该进程名包含的所有线程，适用于MacOS&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</summary>
      
    
    
    
    <category term="常用脚本" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="shell脚本" scheme="http://caitiao.huitailang.pub/tags/shell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>根据PID过滤进程信息</title>
    <link href="http://caitiao.huitailang.pub/2023/10/25/gen-ju-pid-guo-lu-jin-cheng-xin-xi/"/>
    <id>http://caitiao.huitailang.pub/2023/10/25/gen-ju-pid-guo-lu-jin-cheng-xin-xi/</id>
    <published>2023-10-25T09:23:31.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>根据PID过滤进程信息，注意这里的脚本仅使用MacOS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"># pid.sh</span><br><span class="line">read -p &quot;请输入要查询的PID: &quot; P</span><br><span class="line">n=`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $11&#125;&#x27;|wc -l`</span><br><span class="line">if [ $n -eq 0 ];then</span><br><span class="line"> echo &quot;该PID不存在！！&quot;</span><br><span class="line"> exit</span><br><span class="line">fi</span><br><span class="line">echo &quot;--------------------------------&quot;</span><br><span class="line">echo &quot;进程PID: $P&quot;</span><br><span class="line">echo &quot;进程命令：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $11&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;进程所属用户: `ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $1&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;CPU占用率：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $3&#125;&#x27;`%&quot;</span><br><span class="line">echo &quot;内存占用率：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $4&#125;&#x27;`%&quot;</span><br><span class="line">echo &quot;进程开始运行的时刻：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $9&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;进程运行的时间：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $10&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;进程状态：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $8&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;进程虚拟内存：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $5&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;进程共享内存：`ps ux | awk &#x27;$2~/^&#x27;$P&#x27;$/&#123;print $6&#125;&#x27;`&quot;</span><br><span class="line">echo &quot;--------------------------------&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;根据PID过滤进程信息，注意这里的脚本仅使用MacOS&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    <category term="常用脚本" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="shell脚本" scheme="http://caitiao.huitailang.pub/tags/shell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>常用Git命令</title>
    <link href="http://caitiao.huitailang.pub/2023/10/23/chang-yong-git-ming-ling/"/>
    <id>http://caitiao.huitailang.pub/2023/10/23/chang-yong-git-ming-ling/</id>
    <published>2023-10-23T15:48:46.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<h4 id="提交文件到索引中-git-add"><a href="#提交文件到索引中-git-add" class="headerlink" title="提交文件到索引中 git add"></a>提交文件到索引中 git add</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add -A #将所有新增、修改、删除的文件提交到索引中</span><br><span class="line">git add -u #将所有修改、删除的文件提交到索引中</span><br><span class="line">git add . #将所有新增、修改、删除的文件提交到索引中</span><br><span class="line">git add --ignore-removal . #将所有新增、修改的文件提交到索引中</span><br></pre></td></tr></table></figure><h4 id="查看文件每行的最后提交人和时间-git-blame"><a href="#查看文件每行的最后提交人和时间-git-blame" class="headerlink" title="查看文件每行的最后提交人和时间 git blame"></a>查看文件每行的最后提交人和时间 git blame</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git blame &lt;file&gt; #查看文件每行的最后提交人和时间</span><br><span class="line">git blame &lt;file&gt; -L :&lt;funcname&gt; #查看文件某个方法的最后提交人和时间</span><br><span class="line">git blame &lt;file&gt; -L &lt;start&gt;,&lt;end&gt; #查看文件行数范围内的最后提交人和时间</span><br></pre></td></tr></table></figure><h4 id="查看所有分支，并显示版本信息"><a href="#查看所有分支，并显示版本信息" class="headerlink" title="查看所有分支，并显示版本信息"></a>查看所有分支，并显示版本信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -v</span><br></pre></td></tr></table></figure><h4 id="在本地创建远程分支"><a href="#在本地创建远程分支" class="headerlink" title="在本地创建远程分支"></a>在本地创建远程分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;local-branch-name&gt; origin/&lt;remote-branch-name&gt;</span><br></pre></td></tr></table></figure><h4 id="clone项目"><a href="#clone项目" class="headerlink" title="clone项目"></a>clone项目</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;giturl&gt;</span><br><span class="line">git clone http://&lt;username&gt;:&lt;password&gt;@&lt;giturl&gt; #带用户名密码</span><br></pre></td></tr></table></figure><h4 id="git配置-git-config"><a href="#git配置-git-config" class="headerlink" title="git配置 git config"></a>git配置 git config</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper cache #全局模式缓存凭证 15 分钟</span><br><span class="line">git config --global credential.helper store #全局模式储存仓库凭证</span><br><span class="line">git config --global user.email &quot;youremail@gmail.com&quot;  #全局配置 git 邮箱</span><br><span class="line">git config --global user.name &quot;your name&quot; #全局配置 git 用户名</span><br><span class="line">git config credential.helper store #储存当前仓库凭证</span><br></pre></td></tr></table></figure><h4 id="把远程分支拉到本地-git-fetch"><a href="#把远程分支拉到本地-git-fetch" class="headerlink" title="把远程分支拉到本地 git fetch"></a>把远程分支拉到本地 git fetch</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><h4 id="初始化当前目录为仓库-git-init"><a href="#初始化当前目录为仓库-git-init" class="headerlink" title="初始化当前目录为仓库 git init"></a>初始化当前目录为仓库 git init</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git init &lt;repo_name&gt; #创建 仓库</span><br></pre></td></tr></table></figure><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --stat --author=&lt;pattern&gt; --after=&lt;date&gt; --before=&lt;date&gt; #查看某人一段时间的提交记录，并显示详情</span><br></pre></td></tr></table></figure><h4 id="撤销所有合并操作"><a href="#撤销所有合并操作" class="headerlink" title="撤销所有合并操作"></a>撤销所有合并操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge --abort</span><br></pre></td></tr></table></figure><h4 id="拉取远程分支到本地"><a href="#拉取远程分支到本地" class="headerlink" title="拉取远程分支到本地"></a>拉取远程分支到本地</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;提交文件到索引中-git-add&quot;&gt;&lt;a href=&quot;#提交文件到索引中-git-add&quot; class=&quot;headerlink&quot; title=&quot;提交文件到索引中 git add&quot;&gt;&lt;/a&gt;提交文件到索引中 git add&lt;/h4&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="常用命令" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="git" scheme="http://caitiao.huitailang.pub/tags/git/"/>
    
    <category term="版本管理" scheme="http://caitiao.huitailang.pub/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>ls Operation not permitted</title>
    <link href="http://caitiao.huitailang.pub/2023/10/23/ls-operation-not-permitted/"/>
    <id>http://caitiao.huitailang.pub/2023/10/23/ls-operation-not-permitted/</id>
    <published>2023-10-23T13:25:36.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>最近，我在Mac终端zsh中运行命令ls时，会出现如下错误，即使加了sudo也不行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxx@xxxx % ls</span><br><span class="line">ls:.:Operation not permitted</span><br></pre></td></tr></table></figure><p>经过排查及网上查资料，发现需要执行以下几步来解决</p><ol><li>单击菜单栏上的苹果图标</li><li>选择系统偏好设置</li><li>点击安全和隐私，</li><li>选择文件和文件夹，</li><li>允许下面的应用程序访问文件和文件夹，查找终端并检查 - 桌面文件夹</li><li>点击退出并重新打开</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近，我在Mac终端zsh中运行命令ls时，会出现如下错误，即使加了sudo也不行&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="问题解决" scheme="http://caitiao.huitailang.pub/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
    <category term="ZSH" scheme="http://caitiao.huitailang.pub/tags/ZSH/"/>
    
    <category term="Terminal" scheme="http://caitiao.huitailang.pub/tags/Terminal/"/>
    
  </entry>
  
  <entry>
    <title>常用docker命令</title>
    <link href="http://caitiao.huitailang.pub/2023/10/17/chang-yong-docker-ming-ling/"/>
    <id>http://caitiao.huitailang.pub/2023/10/17/chang-yong-docker-ming-ling/</id>
    <published>2023-10-17T11:37:36.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><h4 id="在当前目录创建镜像，不使用缓存"><a href="#在当前目录创建镜像，不使用缓存" class="headerlink" title="在当前目录创建镜像，不使用缓存"></a>在当前目录创建镜像，不使用缓存</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --no-cache -t &lt;image-name&gt; .</span><br></pre></td></tr></table></figure><h4 id="在当前目录创建镜像"><a href="#在当前目录创建镜像" class="headerlink" title="在当前目录创建镜像"></a>在当前目录创建镜像</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t &lt;image-name&gt; .</span><br></pre></td></tr></table></figure><h4 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container restart &lt;continer-name&gt;</span><br></pre></td></tr></table></figure><h4 id="在交互模式下进入容器，并进入-bash-环境"><a href="#在交互模式下进入容器，并进入-bash-环境" class="headerlink" title="在交互模式下进入容器，并进入 bash 环境"></a>在交互模式下进入容器，并进入 bash 环境</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;continer-name&gt; /bin/bash</span><br></pre></td></tr></table></figure><h4 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image ls</span><br></pre></td></tr></table></figure><h4 id="查看-docker-详情"><a href="#查看-docker-详情" class="headerlink" title="查看 docker 详情"></a>查看 docker 详情</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><h4 id="从最后-10-行开始实时查看日志"><a href="#从最后-10-行开始实时查看日志" class="headerlink" title="从最后 10 行开始实时查看日志"></a>从最后 10 行开始实时查看日志</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f --tail 10 &lt;continer-name&gt;</span><br></pre></td></tr></table></figure><h4 id="从最后-10-行开始实时查看日志并过滤信息"><a href="#从最后-10-行开始实时查看日志并过滤信息" class="headerlink" title="从最后 10 行开始实时查看日志并过滤信息"></a>从最后 10 行开始实时查看日志并过滤信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f --tail 10 &lt;continer-name&gt; 2&gt;&amp;1 | grep &lt;pattern&gt;</span><br></pre></td></tr></table></figure><h4 id="查看当前运行的进程列表"><a href="#查看当前运行的进程列表" class="headerlink" title="查看当前运行的进程列表"></a>查看当前运行的进程列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h4 id="查看所有进程列表"><a href="#查看所有进程列表" class="headerlink" title="查看所有进程列表"></a>查看所有进程列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h4 id="重启所有服务"><a href="#重启所有服务" class="headerlink" title="重启所有服务"></a>重启所有服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart `docker ps -a | awk &#x27;&#123;print $1&#125;&#x27;`</span><br></pre></td></tr></table></figure><h4 id="查看-client-和-server-的版本"><a href="#查看-client-和-server-的版本" class="headerlink" title="查看 client 和 server 的版本"></a>查看 client 和 server 的版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;查看版本&quot;&gt;&lt;a href=&quot;#查看版本&quot; class=&quot;headerlink&quot; title=&quot;查看版本&quot;&gt;&lt;/a&gt;查看版本&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="常用命令" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="docker" scheme="http://caitiao.huitailang.pub/tags/docker/"/>
    
    <category term="容器技术" scheme="http://caitiao.huitailang.pub/tags/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用ifconfig查看本机ip</title>
    <link href="http://caitiao.huitailang.pub/2023/10/17/shi-yong-ifconfig-cha-kan-ben-ji-ip/"/>
    <id>http://caitiao.huitailang.pub/2023/10/17/shi-yong-ifconfig-cha-kan-ben-ji-ip/</id>
    <published>2023-10-17T10:28:09.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>在终端中输入<code>ifconfig</code>可以看到很多的信息，其中包含了本机的ip，但是信息过多，即使你知道从什么地方查找，每次看也会头晕，我们需要精确找到本机ip的方法。<br>在linux中使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig eth0</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.8.21  netmask 255.255.240.0  broadcast 192.168.8.1</span><br><span class="line">        ether 00:16:3e:0c:ec:20  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 215013189  bytes 59080762287 (55.0 GiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 125960779  bytes 124345275246 (115.8 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>第二行的第一个ip就是本机ip<code>192.168.8.21</code></p><p>在MacOS中稍有不同，命令为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ifconfig en0</span><br></pre></td></tr></table></figure><p>接下来，我们使用<code>grep</code> <code>awk</code>来进行精确获取</p><h4 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig eth0 | grep inet | grep -v inet6 | awk &#x27;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig eth0 | grep inet | grep -v inet6 | awk &#x27;&#123;print $2&#125;&#x27; | awk -v FS=&quot;:&quot; &#x27;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig en0 | grep inet | grep -v inet6 | awk &#x27;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在终端中输入&lt;code&gt;ifconfig&lt;/code&gt;可以看到很多的信息，其中包含了本机的ip，但是信息过多，即使你知道从什么地方查找，每次看也会头晕，我们需要精确找到本机ip的方法。&lt;br&gt;在linux中使用命令&lt;/p&gt;
&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="常用命令" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="ifconfig" scheme="http://caitiao.huitailang.pub/tags/ifconfig/"/>
    
    <category term="linux" scheme="http://caitiao.huitailang.pub/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>常用Hexo命令</title>
    <link href="http://caitiao.huitailang.pub/2023/10/17/chang-yong-hexo-ming-ling/"/>
    <id>http://caitiao.huitailang.pub/2023/10/17/chang-yong-hexo-ming-ling/</id>
    <published>2023-10-17T10:28:09.000Z</published>
    <updated>2024-10-15T08:12:51.501Z</updated>
    
    <content type="html"><![CDATA[<p>hexo常用命令：<a href="https://hexo.io/zh-cn/docs/commands">指令 | Hexo</a></p><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="新建一个网站"><a href="#新建一个网站" class="headerlink" title="新建一个网站"></a>新建一个网站</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init #默认在当前目录创建</span><br><span class="line">hexo init [folder] #指定网站目录</span><br></pre></td></tr></table></figure><h4 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><h4 id="清除已生成的静态文件及缓存文件-db-json"><a href="#清除已生成的静态文件及缓存文件-db-json" class="headerlink" title="清除已生成的静态文件及缓存文件 (db.json)"></a>清除已生成的静态文件及缓存文件 (db.json)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h4 id="强制重新生成静态文件"><a href="#强制重新生成静态文件" class="headerlink" title="强制重新生成静态文件"></a>强制重新生成静态文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -f</span><br></pre></td></tr></table></figure><h4 id="列出网站资料"><a href="#列出网站资料" class="headerlink" title="列出网站资料"></a>列出网站资料</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure><h4 id="启动网站服务"><a href="#启动网站服务" class="headerlink" title="启动网站服务"></a>启动网站服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h4 id="显示-Hexo-版本"><a href="#显示-Hexo-版本" class="headerlink" title="显示 Hexo 版本"></a>显示 Hexo 版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hexo常用命令：&lt;a href=&quot;https://hexo.io/zh-cn/docs/commands&quot;&gt;指令 | Hexo&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装hexo&quot;&gt;&lt;a href=&quot;#安装hexo&quot; class=&quot;headerlink&quot; title=&quot;安装he</summary>
      
    
    
    
    <category term="常用命令" scheme="http://caitiao.huitailang.pub/categories/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Hexo" scheme="http://caitiao.huitailang.pub/tags/Hexo/"/>
    
  </entry>
  
</feed>
